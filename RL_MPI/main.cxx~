#include "RlmpiInitializer.hxx"
#include "iostream"
#include <vector>
using namespace std;
#ifdef SUNWAY
extern "C" {
#include <athread.h>
#include <algorithm>
    void slave_initTable(Schedule*data);
    void slave_test(Schedule*data);
    void slave_test_athread_get(double* in);
}
#endif

int main() {
#ifdef SUNWAY
    athread_init();
#endif
    RlmpiInitializer reg;
    vector<vector<ThreadID> > sendList(64);
    for (int i = 0; i < 64; i++) {
        int ntimes = 2;
        //        sendList[i].resize(63 * ntimes);
        int s = 0;
        for (int b = 0; b < ntimes; b++) {
            for (int j = 0; j < 64; j++) {
                if (j < i) {
                    sendList[i].push_back(j);
                }
            }
        }
    }
    Schedule *schedule_data = new Schedule;
    reg.init(sendList);
    reg.copyinfo(schedule_data);
    schedule_data->destroy = 0;

#ifdef SUNWAY
    __real_athread_spawn((void *) slave_initTable, schedule_data);
    athread_join();
#endif

#ifdef SUNWAY
    __real_athread_spawn((void *) slave_test, schedule_data);
    athread_join();
#endif
 



#ifdef SUNWAY
    athread_halt();
#endif
}
